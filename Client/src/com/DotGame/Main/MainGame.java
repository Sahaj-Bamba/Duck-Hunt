/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.DotGame.Main;

import DuckHunt.Constant.MessageType;
import com.DotGame.Other.GameGlobalVariables;
import DuckHunt.Request.GameOver;
import com.DotGame.Request.GameState;
import com.DotGame.Request.GroupList;
import com.DotGame.Request.Message;
import com.DotGame.Request.Move;
import com.DotGame.Request.RemoveMember;
import com.DotGame.Utilities.Menu;
import com.DotGame.Utilities.OverScreen;

/**
 *
 * @author Sahaj
 */
public class MainGame extends javax.swing.JFrame {

    /**
     * Creates new form MainGame
     */
    public MainGame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        chatArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        msgContent = new javax.swing.JTextField();
        turnOf = new javax.swing.JLabel();
        playerName = new javax.swing.JLabel();
        leaveGame = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1200, 600));

        chatArea.setColumns(50);
        chatArea.setRows(5);
        jScrollPane1.setViewportView(chatArea);

        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        turnOf.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        playerName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        leaveGame.setText("Leave Game");
        leaveGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaveGameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(turnOf, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(231, 231, 231)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(playerName, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(leaveGame, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(msgContent)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(turnOf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playerName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(leaveGame, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(msgContent))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        GameGlobalVariables.getInstance().getClient().sendMessage(new Message(GameGlobalVariables.getInstance().getClient().getName(),GameGlobalVariables.getInstance().getClient().getGroupName(),msgContent.getText(),MessageType.UserToGroup));
        msgContent.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void leaveGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaveGameActionPerformed

            GameGlobalVariables.getInstance().getClient().sendMessage(new RemoveMember(GameGlobalVariables.getInstance().getClient().getName()));
            GameGlobalVariables.getInstance().destroy();
            this.destroy();
            new Menu().setVisible(true);
           
    }//GEN-LAST:event_leaveGameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea chatArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton leaveGame;
    private javax.swing.JTextField msgContent;
    private javax.swing.JLabel playerName;
    private javax.swing.JLabel turnOf;
    // End of variables declaration//GEN-END:variables

    private String[] players;
    private Thread listen;
    private GamePanel game;
    
    public void initializer(int size) {
        playerName.setText(GameGlobalVariables.getInstance().getClient().getName());
        chatArea.setEditable(false);
        GameGlobalVariables.getInstance().getClient().sendMessage(new GroupList(GameGlobalVariables.getInstance().getClient().getGroupName()));
        GroupList groupList = (GroupList) GameGlobalVariables.getInstance().getClient().receiveMessage();
        
        players = groupList.getClients();
                
        listen = new Thread(new ListenGame(this));
        listen.start();
        
        starterGame(size);
        this.setVisible(true);
    }
    
    public void gotMessage(String msg){
        chatArea.setText(chatArea.getText() + "\n" + msg);
    }
     
    public void lostPlayer(String name){
        int i;
        for (i = 0; i < 8; i++) {
            if (players[i].equals(name)) {
                break;
            }
        }
        game.lostPlayer(i);
        chatArea.setText(chatArea.getText() + "\n\t\t" + name + " left the room. ");
    }

    private void destroy() {
        this.dispose();
        listen.stop();
    }

    void updateGame(GameState gameState) {
        if (players[gameState.getTurn()].equals(GameGlobalVariables.getInstance().getClient().getName())) {
            game.makeMove();
        }
        game.update(gameState);
        turnOf.setText(players[gameState.getTurn()]);
    }
    
    void updateGame(Move move) {
        game.update(move);
        turnOf.setText(players[game.getGameState().getTurn()]);
        if (players[game.getGameState().getTurn()].equals(GameGlobalVariables.getInstance().getClient().getName())) {
            game.makeMove();
        }
    }

    private void starterGame(int size) {
        game = new GamePanel(size);
        game.setBounds(50, 110, 440, 440);
        this.add(game);
    }

    void gameOver(int name) {
        System.out.println(players[name]);
        GameGlobalVariables.getInstance().getClient().sendMessage(new GameOver(0));
        GameGlobalVariables.getInstance().destroy();
        listen = null;
        this.dispose();
        new OverScreen().initializer(players[name]);
    }
    
}
